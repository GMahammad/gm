{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehemmed\\\\Desktop\\\\Code{1}\\\\GMport_new\\\\client\\\\src\\\\PortfolioContainer\\\\Home\\\\Header\\\\Header.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtills\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  // const [selectedScreen, setSelectedScreen] = useState(0);\n  // const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  // const updateCurrentScreen = (currentScreen) => {\n  //     if (!currentScreen || !currentScreen.screenInView) return;\n\n  //     let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n  //     if (screenIndex < 0) return;\n  // };\n  // let currentScreenSubscription =\n  //     ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  // const getHeaderOptions = () => {\n  //     return TOTAL_SCREENS.map((Screen, i) => (\n  //         <div\n  //             key={Screen.screen_name}\n  //             className={getHeaderOptionsClasses(i)}\n  //             onClick={() => switchScreen(i, Screen)}\n  //         >\n  //             <span>{Screen.screen_name}</span>\n  //         </div>\n  //     ));\n  // };\n\n  // const getHeaderOptionsClasses = (index) => {\n  //     let classes = \"header-option \";\n  //     if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n\n  //     if (selectedScreen === index) classes += \"selected-header-option \";\n\n  //     return classes;\n  // };\n\n  // const switchScreen = (index, screen) => {\n  //     let screenComponent = document.getElementById(screen.screen_name);\n  //     if (!screenComponent) return;\n\n  //     screenComponent.scrollIntoView({ behavior: \"smooth\" });\n  //     setSelectedScreen(index);\n  //     setShowHeaderOptions(false);\n  // };\n\n  // useEffect(() => {\n  //     return () => {\n  //         currentScreenSubscription.unsubscribe();\n  //     };\n  // }, [currentScreenSubscription]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\"\n    // onClick={() => setShowHeaderOptions(!showHeaderOptions)}\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\"\n        // onClick={() => setShowHeaderOptions(!showHeaderOptions)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"EHIZEEX~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","jsxDEV","_jsxDEV","Header","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/GMport_new/client/src/PortfolioContainer/Home/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    TOTAL_SCREENS,\r\n    GET_SCREEN_INDEX,\r\n} from \"../../../utilities/commonUtills\";\r\nimport ScrollService from \"../../../utilities/ScrollService\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n    // const [selectedScreen, setSelectedScreen] = useState(0);\r\n    // const [showHeaderOptions, setShowHeaderOptions] = useState(false);\r\n\r\n    // const updateCurrentScreen = (currentScreen) => {\r\n    //     if (!currentScreen || !currentScreen.screenInView) return;\r\n\r\n    //     let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\r\n    //     if (screenIndex < 0) return;\r\n    // };\r\n    // let currentScreenSubscription =\r\n    //     ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\r\n\r\n    // const getHeaderOptions = () => {\r\n    //     return TOTAL_SCREENS.map((Screen, i) => (\r\n    //         <div\r\n    //             key={Screen.screen_name}\r\n    //             className={getHeaderOptionsClasses(i)}\r\n    //             onClick={() => switchScreen(i, Screen)}\r\n    //         >\r\n    //             <span>{Screen.screen_name}</span>\r\n    //         </div>\r\n    //     ));\r\n    // };\r\n\r\n    // const getHeaderOptionsClasses = (index) => {\r\n    //     let classes = \"header-option \";\r\n    //     if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\r\n\r\n    //     if (selectedScreen === index) classes += \"selected-header-option \";\r\n\r\n    //     return classes;\r\n    // };\r\n\r\n    // const switchScreen = (index, screen) => {\r\n    //     let screenComponent = document.getElementById(screen.screen_name);\r\n    //     if (!screenComponent) return;\r\n\r\n    //     screenComponent.scrollIntoView({ behavior: \"smooth\" });\r\n    //     setSelectedScreen(index);\r\n    //     setShowHeaderOptions(false);\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         currentScreenSubscription.unsubscribe();\r\n    //     };\r\n    // }, [currentScreenSubscription]);\r\n\r\n    return (\r\n        <div\r\n            className=\"header-container\"\r\n            // onClick={() => setShowHeaderOptions(!showHeaderOptions)}\r\n        >\r\n            <div className=\"header-parent\">\r\n                <div\r\n                    className=\"header-hamburger\"\r\n                    // onClick={() => setShowHeaderOptions(!showHeaderOptions)}\r\n                >\r\n                {/* <FontAwesomeIcon className=\"header-hmburger-bars\" icon={faBars} /> */}\r\n                </div>\r\n                <div className=\"header-logo\">\r\n                    <span>EHIZEEX~</span>\r\n                </div>\r\n                <div\r\n                    // className={\r\n                    //     showHeaderOptions\r\n                    //         ? \"header-options show-hamburger-options\"\r\n                    //         : \"header-options\"\r\n                    // }\r\n                >\r\n                    {/* {getHeaderOptions()} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACIC,aAAa,EACbC,gBAAgB,QACb,iCAAiC;AACxC,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC7B;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACID,OAAA;IACIE,SAAS,EAAC;IACV;IAAA;IAAAC,QAAA,eAEAH,OAAA;MAAKE,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BH,OAAA;QACIE,SAAS,EAAC;QACV;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGE,eACNP,OAAA;QAAKE,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxBH,OAAA;UAAAG,QAAA,EAAM;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB,eACNP,OAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAQM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;AAACC,EAAA,GA5EuBP,MAAM;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}