{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/Mehemmed/Desktop/Code{1}/GMport_new/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _createClass from\"C:/Users/Mehemmed/Desktop/Code{1}/GMport_new/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"C:/Users/Mehemmed/Desktop/Code{1}/GMport_new/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import{TOTAL_SCREENS}from\"./commonUtills\";import{Subject}from'rxjs';var ScrollService=/*#__PURE__*/_createClass(function ScrollService(){var _this=this;_classCallCheck(this,ScrollService);this.scrollToHireMe=function(){var contactMeScreen=document.getElementById(\"ContactMe\");if(!contactMeScreen)return;contactMeScreen.scrollIntoView({behavior:\"smooth\"});};this.scrollToHome=function(){var HomeScreen=document.getElementById(\"Home\");if(!HomeScreen)return;HomeScreen.scrollIntoView({behavior:\"smooth\"});};this.isElementInView=function(elem,type){var rec=elem.getBoundingClientRect();var elementTop=rec.top;var elementBottom=rec.Bottom;var partiallyVisible=elementTop<window.innerHeight&&elementBottom>=0;var completelyVisible=elementTop>=0&&elementBottom<=window.innerHeight;switch(type){case\"partial\":return partiallyVisible;case\"complete\":return completelyVisible;default:return false;}};this.checkCurrentScreenUnderViewport=function(event){if(!event||Object.keys(event).length<1)return;var _iterator=_createForOfIteratorHelper(TOTAL_SCREENS),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var screen=_step.value;var screenFromDOM=document.getElementById(screen.screen_name);if(!screenFromDOM)continue;var fullyVisible=_this.isElementInView(screenFromDOM,\"complete\");var partiallyVisible=_this.isElementInView(screenFromDOM,\"partial\");if(fullyVisible||partiallyVisible){if(partiallyVisible&&!screen.alreadyRendered){ScrollService.currentScreenFadeIn.next({fadeInScreen:screen.screen_name});screen['alreadyRendered']=true;break;}if(fullyVisible){ScrollService.currentScreenBroadCaster.next({screenInView:screen.screen_name});break;}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}};window.addEventListener(\"scroll\",this.checkCurrentScreenUnderViewport);});ScrollService.scrollHandler=new ScrollService();ScrollService.currentScreenBroadCaster=new Subject();ScrollService.currentScreenFadeIn=new Subject();export{ScrollService as default};","map":{"version":3,"names":["TOTAL_SCREENS","Subject","ScrollService","_createClass","_this","_classCallCheck","scrollToHireMe","contactMeScreen","document","getElementById","scrollIntoView","behavior","scrollToHome","HomeScreen","isElementInView","elem","type","rec","getBoundingClientRect","elementTop","top","elementBottom","Bottom","partiallyVisible","window","innerHeight","completelyVisible","checkCurrentScreenUnderViewport","event","Object","keys","length","_iterator","_createForOfIteratorHelper","_step","s","n","done","screen","value","screenFromDOM","screen_name","fullyVisible","alreadyRendered","currentScreenFadeIn","next","fadeInScreen","currentScreenBroadCaster","screenInView","err","e","f","addEventListener","scrollHandler","default"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/GMport_new/client/src/utilities/ScrollService.js"],"sourcesContent":["import { TOTAL_SCREENS } from \"./commonUtills\";\r\nimport { Subject } from 'rxjs'\r\n\r\n\r\nexport default class ScrollService {\r\n    static scrollHandler = new ScrollService();\r\n    static currentScreenBroadCaster = new Subject();\r\n    static currentScreenFadeIn = new Subject();\r\n\r\n    constructor() {\r\n        window.addEventListener(\"scroll\", this.checkCurrentScreenUnderViewport)\r\n    }\r\n    scrollToHireMe = () => {\r\n        let contactMeScreen = document.getElementById(\"ContactMe\")\r\n        if (!contactMeScreen) return;\r\n        contactMeScreen.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n    scrollToHome = () => {\r\n        let HomeScreen = document.getElementById(\"Home\")\r\n        if (!HomeScreen) return;\r\n        HomeScreen.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n    isElementInView = (elem, type) => {\r\n        let rec = elem.getBoundingClientRect();\r\n        let elementTop = rec.top;\r\n        let elementBottom = rec.Bottom;\r\n\r\n        let partiallyVisible = elementTop < window.innerHeight && elementBottom >= 0;\r\n        let completelyVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\r\n\r\n        switch (type) {\r\n            case \"partial\":\r\n                return partiallyVisible;\r\n\r\n            case \"complete\":\r\n                return completelyVisible\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n    checkCurrentScreenUnderViewport = (event) => {\r\n        if (!event || Object.keys(event).length<1)\r\n            return;\r\n        for (let screen of TOTAL_SCREENS) {\r\n            let screenFromDOM = document.getElementById(screen.screen_name);\r\n            if (!screenFromDOM)\r\n                continue;\r\n\r\n            let fullyVisible = this.isElementInView(screenFromDOM, \"complete\");\r\n            let partiallyVisible = this.isElementInView(screenFromDOM, \"partial\");\r\n\r\n            if (fullyVisible || partiallyVisible) {\r\n                if (partiallyVisible && !screen.alreadyRendered) {\r\n                    ScrollService.currentScreenFadeIn.next({\r\n                        fadeInScreen: screen.screen_name\r\n                    });\r\n                    screen['alreadyRendered'] = true;\r\n                    break;\r\n                }\r\n                if (fullyVisible) {\r\n                    ScrollService.currentScreenBroadCaster.next({\r\n                        screenInView: screen.screen_name\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}